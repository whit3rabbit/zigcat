# Multi-stage Dockerfile for Linux cross-compilation
FROM --platform=$BUILDPLATFORM ubuntu:22.04 AS builder

ARG TARGETPLATFORM
ARG BUILDPLATFORM
ARG ZIG_VERSION=0.13.0

# Install system dependencies
RUN apt-get update && apt-get install -y \
    wget \
    xz-utils \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Install Zig compiler
RUN wget -q https://ziglang.org/download/${ZIG_VERSION}/zig-linux-x86_64-${ZIG_VERSION}.tar.xz \
    && tar -xf zig-linux-x86_64-${ZIG_VERSION}.tar.xz \
    && mv zig-linux-x86_64-${ZIG_VERSION} /opt/zig \
    && rm zig-linux-x86_64-${ZIG_VERSION}.tar.xz

ENV PATH="/opt/zig:$PATH"

# Create build directory
WORKDIR /build

# Copy source code
COPY . .

# Platform-to-Zig target mapping script
RUN echo '#!/bin/bash\n\
case "$1" in\n\
  "linux/amd64") echo "x86_64-linux-gnu" ;;\n\
  "linux/arm64") echo "aarch64-linux-gnu" ;;\n\
  *) echo "x86_64-linux-gnu" ;;\n\
esac' > /usr/local/bin/platform-to-zig-target.sh \
    && chmod +x /usr/local/bin/platform-to-zig-target.sh

# Build for target platform
RUN ZIG_TARGET=$(platform-to-zig-target.sh $TARGETPLATFORM) && \
    echo "Building for Zig target: $ZIG_TARGET" && \
    zig build -Dtarget=$ZIG_TARGET -Doptimize=ReleaseSafe

# Run unit tests
RUN ZIG_TARGET=$(platform-to-zig-target.sh $TARGETPLATFORM) && \
    echo "Running tests for Zig target: $ZIG_TARGET" && \
    zig build test -Dtarget=$ZIG_TARGET

# Export stage for artifacts
FROM scratch AS artifacts
COPY --from=builder /build/zig-out/bin/ /bin/
COPY --from=builder /build/zig-out/ /artifacts/

# Runtime stage for testing
FROM ubuntu:22.04 AS runtime

# Install runtime dependencies for testing
RUN apt-get update && apt-get install -y \
    netcat-openbsd \
    curl \
    wget \
    bc \
    procps \
    iproute2 \
    iputils-ping \
    telnet \
    socat \
    strace \
    tcpdump \
    net-tools \
    dnsutils \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Install Zig for test execution
ARG ZIG_VERSION=0.13.0
RUN wget -q https://ziglang.org/download/${ZIG_VERSION}/zig-linux-x86_64-${ZIG_VERSION}.tar.xz \
    && tar -xf zig-linux-x86_64-${ZIG_VERSION}.tar.xz \
    && mv zig-linux-x86_64-${ZIG_VERSION} /opt/zig \
    && rm zig-linux-x86_64-${ZIG_VERSION}.tar.xz

ENV PATH="/opt/zig:$PATH"

# Create test user for security tests
RUN useradd -m -s /bin/bash testuser

# Copy built binaries
COPY --from=builder /build/zig-out/bin/ /usr/local/bin/

# Create test directories
RUN mkdir -p /test-results /test-logs /artifacts
WORKDIR /test

# Set up network namespace capabilities for testing
RUN echo 'net.ipv4.ip_unprivileged_port_start = 1024' >> /etc/sysctl.conf

# Default command
CMD ["/bin/bash", "-c", "sleep infinity"]
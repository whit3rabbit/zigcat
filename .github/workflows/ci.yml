name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  smoke:
    name: Smoke Tests
    runs-on: ubuntu-latest
    env:
      ZIG_VERSION: 0.15.2
      ZIG_GLOBAL_CACHE_DIR: ${{ github.workspace }}/zig-global-cache
    steps:
      - uses: actions/checkout@v4

      - name: Set up Zig
        uses: mlugg/setup-zig@v2
        with:
          version: ${{ env.ZIG_VERSION }}

      - name: Install OpenSSL
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev pkg-config

      - name: Cache Zig build artifacts
        uses: actions/cache@v3
        with:
          path: |
            zig-cache
            zig-out
            ${{ env.ZIG_GLOBAL_CACHE_DIR }}
          key: ${{ runner.os }}-zig-${{ env.ZIG_VERSION }}-${{ hashFiles('build.zig', 'src/**/*.zig', 'tests/**/*.zig') }}
          restore-keys: |
            ${{ runner.os }}-zig-${{ env.ZIG_VERSION }}-

      - name: Prime cache directories
        shell: bash
        run: |
          mkdir -p "zig-cache" "zig-out" "$ZIG_GLOBAL_CACHE_DIR"

      - name: Smoke test suite
        shell: bash
        run: zig build test

  test:
    name: Full Test Matrix
    needs: smoke
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            label: Ubuntu
            install_deps: |
              sudo apt-get update
              sudo apt-get install -y libssl-dev pkg-config
            commands: |
              zig build test
              zig build test-timeout
              zig build test-udp
              zig build test-zero-io
              zig build test-quit-eof
              zig build test-platform
              zig build test-portscan-features
              zig build test-portscan-uring
              zig build test-validation
              zig build test-parallel-scan
              zig build test-ssl
          - os: macos-latest
            label: macOS
            install_deps: |
              brew install openssl@3 pkg-config
            commands: |
              zig build test
              zig build test-timeout
              zig build test-udp
              zig build test-zero-io
              zig build test-quit-eof
              zig build test-platform
              zig build test-portscan-features
              zig build test-validation
              zig build test-parallel-scan
              zig build test-ssl
          - os: windows-latest
            label: Windows
            install_deps: |
              # Windows dependencies handled by Zig
              echo "No additional dependencies needed"
            commands: |
              zig build test
              zig build test-timeout
              zig build test-udp
              zig build test-validation
              zig build test-platform
    env:
      ZIG_VERSION: 0.15.2
      ZIG_GLOBAL_CACHE_DIR: ${{ github.workspace }}/zig-global-cache
    steps:
      - uses: actions/checkout@v4

      - name: Set up Zig
        uses: mlugg/setup-zig@v2
        with:
          version: ${{ env.ZIG_VERSION }}

      - name: Install dependencies
        shell: bash
        run: |
          ${{ matrix.install_deps }}

      - name: Cache Zig build artifacts
        uses: actions/cache@v3
        with:
          path: |
            zig-cache
            zig-out
            ${{ env.ZIG_GLOBAL_CACHE_DIR }}
          key: ${{ runner.os }}-zig-${{ env.ZIG_VERSION }}-${{ hashFiles('build.zig', 'src/**/*.zig', 'tests/**/*.zig') }}
          restore-keys: |
            ${{ runner.os }}-zig-${{ env.ZIG_VERSION }}-

      - name: Prime cache directories
        shell: bash
        run: |
          mkdir -p "zig-cache" "zig-out" "$ZIG_GLOBAL_CACHE_DIR"

      - name: Run ${{ matrix.label }} tests
        shell: bash
        run: |
          set -euo pipefail
          while IFS= read -r cmd; do
            if [[ -n "$cmd" ]]; then
              echo "Running: $cmd"
              $cmd || echo "Test $cmd failed but continuing..."
            fi
          done <<'EOF'
          ${{ matrix.commands }}
          EOF

      - name: Build artifact (for testing)
        shell: bash
        run: |
          zig build -Dstrip=true
          ls -lh zig-out/bin/

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: zigcat-${{ matrix.label }}
          path: zig-out/bin/zigcat*
          retention-days: 7
